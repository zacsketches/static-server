# In this build we are going to push a docker container that includes
# the static content build from a react app that will be served by
# the golang server.
language: 
  - go
  - node_js

go:
  - 1.13

node_js:
  - 13.1.x

services:
  - docker

# Install takes steps ensure dependencies are in place and builds the 
# production version of the frontend app.  After building it also
# copies the static react app into the www folder where the go
# server expects to find it.  The echo and ls commands provide better
# log output in travis to support troubleshooting the build.
install:
  - go get -t -v
  - cd frontend
  - npm install -g create-react-app
  - npm install
  - create-react-app --version
  - npm run build
  - cd ..
  - echo $PWD
  - cp -r frontend/build/ www/
  - ls www/

# The golang container that will be built is a linux OS 
# and an amd64 architecture. The env settings prior to the go
# build command ensures the build targets the right deployment
# architecture.
script: 
  - mkdir bin
  - pwd
  - ls -alF
  - env GOOS=linux GOARCH=amd64 go build -o bin/static-server

# Once the source code is compiled we build the container....
# and maybe use Travis to push it to DockerHub.  
after_script:
  - docker build -t zacsketches/static-server .
  - docker image ls
